
name: UM.haberes.core-service Build JVM Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-analyze:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags.
          # SonarCloud needs this to perform analysis on PRs.
          fetch-depth: 0
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and analyze
        env:
          # This token is stored in GitHub Secrets.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=UM-services_UM.tesoreria.sender-service

  # --- Job 1: Build the standard JVM image ---
  build-image:
    # Only run on pushes to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for JVM Docker image
        id: meta-jvm
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_IMAGE_NAME }}
          # Add a '-jvm' suffix to tags to differentiate them
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push JVM Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          # Point to the new JVM-specific Dockerfile
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-jvm.outputs.tags }}
          labels: ${{ steps.meta-jvm.outputs.labels }}
          cache-from: type=gha,scope=jvm
          cache-to: type=gha,scope=jvm,mode=max

